import{_ as n,o as a,c as s,a as e}from"./app-DhZUw4qF.js";const l={},i=e(`<h1 id="webpack" tabindex="-1"><a class="header-anchor" href="#webpack"><span>Webpack</span></a></h1><h1 id="入门" tabindex="-1"><a class="header-anchor" href="#入门"><span>入门</span></a></h1><h2 id="模块化" tabindex="-1"><a class="header-anchor" href="#模块化"><span>模块化</span></a></h2><h3 id="commonjs" tabindex="-1"><a class="header-anchor" href="#commonjs"><span>CommonJS</span></a></h3><h5 id="写法" tabindex="-1"><a class="header-anchor" href="#写法"><span>写法：</span></a></h5><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// export</span>
modules<span class="token punctuation">.</span>export <span class="token operator">=</span> moduleA

<span class="token comment">// import</span>
<span class="token keyword">const</span> moduleA <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./moduleA&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点：</span></a></h5><ol><li>复用性</li><li>直接运行在<code>node</code>环境，很多npm包都采用CommonJS规范</li></ol><h5 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点：</span></a></h5><ol><li>无法直接运行在浏览器环境，需要<code>Babel</code>转换成ES5</li><li>同步加载</li></ol><h5 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>summary：</span></a></h5><ol><li>同步加载，更适合服务端或npm插件的选择</li></ol><h3 id="amd" tabindex="-1"><a class="header-anchor" href="#amd"><span>AMD</span></a></h3><h5 id="写法-1" tabindex="-1"><a class="header-anchor" href="#写法-1"><span>写法：</span></a></h5><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// export</span>
<span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;moduleA&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;dep&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// import</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;moduleA&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">module</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token operator">...</span><span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="优点-1" tabindex="-1"><a class="header-anchor" href="#优点-1"><span>优点：</span></a></h5><ol><li>可在浏览器环境和<code>node</code>环境直接运行</li><li>异步加载依赖</li><li>并行加载依赖</li></ol><h5 id="缺点-1" tabindex="-1"><a class="header-anchor" href="#缺点-1"><span>缺点：</span></a></h5><ol><li>写法繁琐</li></ol><h5 id="summary-1" tabindex="-1"><a class="header-anchor" href="#summary-1"><span>summary：</span></a></h5><ol><li>异步加载，适合前端使用</li></ol><h3 id="es-module" tabindex="-1"><a class="header-anchor" href="#es-module"><span>ES Module</span></a></h3><h4 id="写法-2" tabindex="-1"><a class="header-anchor" href="#写法-2"><span>写法：</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// export</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// import</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> func <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./func&#39;</span>
<span class="token keyword">import</span> utils <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="优点-2" tabindex="-1"><a class="header-anchor" href="#优点-2"><span>优点：</span></a></h4><ol><li>写法简单</li><li>可直接在<code>node</code>环境运行</li><li>支持同步加载，也支持异步加载</li><li>支持全部导出和局部导出，天然对<code>tree shaking</code>和<code>code splitting</code>友好</li></ol><h4 id="缺点-2" tabindex="-1"><a class="header-anchor" href="#缺点-2"><span>缺点：</span></a></h4><ol><li>无法直接运行在浏览器环境，需要<code>Babel</code>转换成ES5</li></ol><h4 id="summary-2" tabindex="-1"><a class="header-anchor" href="#summary-2"><span>summary：</span></a></h4><ol><li>支持同异步加载，既适合服务端也适合前端</li></ol><h2 id="构建" tabindex="-1"><a class="header-anchor" href="#构建"><span>“构建”</span></a></h2><blockquote><p>“构建其实是工程化、自动化思想在前端开发中的体现，把一系列流程用代码去实现，让代码自动化地执行这一系列复杂的流程。”</p></blockquote><ul><li>代码转换：ts =&gt; js、less =&gt; css</li><li>文件优化：压缩代码、压缩文件</li><li>代码分割：首屏异步加载不需要的模块</li><li>模块合并：项目开发时模块化，构建后要合并成一个文件</li><li>自动刷新：热更新</li><li>代码校验：code lint、commit lint、ci case校验</li><li>自动发布：cd</li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> webpack”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="loader" tabindex="-1"><a class="header-anchor" href="#loader"><span>loader</span></a></h3><blockquote><p>“文件转换功能的翻译员”</p></blockquote><ul><li>loader执行顺序由后到前</li></ul><h3 id="plugin" tabindex="-1"><a class="header-anchor" href="#plugin"><span>plugin</span></a></h3><blockquote><p>构建流程里注入钩子</p></blockquote><h3 id="devserver" tabindex="-1"><a class="header-anchor" href="#devserver"><span>devServer</span></a></h3><h4 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1"><span>安装</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-D</span> webpack-dev-server”
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用</span></a></h4><ol><li>提供http服务</li><li>热更新</li><li>source map</li></ol><h3 id="核心概念" tabindex="-1"><a class="header-anchor" href="#核心概念"><span>核心概念</span></a></h3><ul><li>entry：入口</li><li>module：模块</li><li>chunk：代码块，由多个module组成，用于代码合并与切割</li><li>loader：模块转换器，翻译员</li><li>plugin：构建中注入钩子完成自定义事件</li><li>output：输出</li></ul><h1 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h1><h2 id="entry" tabindex="-1"><a class="header-anchor" href="#entry"><span>entry</span></a></h2><ul><li>配置模块的入口</li><li>必填项，不填webpack则报错退出</li><li>webpack以<code>context</code>为根目录，默认为项目启动的路径</li></ul><h3 id="类型" tabindex="-1"><a class="header-anchor" href="#类型"><span>类型</span></a></h3><ol><li>string <code>scr/main.js</code></li><li>array <code>[&#39;src/main.js&#39;, &#39;src/index.js&#39;]</code></li><li>object <code>{a: &#39;scr/main.js&#39;, b: [&#39;src/main.js&#39;, &#39;src/index.js&#39;]}</code></li></ol><h3 id="chunk" tabindex="-1"><a class="header-anchor" href="#chunk"><span>chunk</span></a></h3><ul><li>如果<code>entry</code>是<code>string</code>或<code>array</code>，则只生成一个chunk，名称为<code>main</code></li><li>如果<code>entry</code>是<code>object</code>，则会出现多个chunk，名称为<code>object</code>的key值</li></ul><h3 id="动态entry" tabindex="-1"><a class="header-anchor" href="#动态entry"><span>动态entry</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 同步函数</span>
<span class="token function-variable function">entry</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;./pages/a&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&#39;./pages/b&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 异步函数</span>
<span class="token function-variable function">entry</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;./pages/a&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&#39;./pages/b&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,57),t=[i];function p(c,o){return a(),s("div",null,t)}const d=n(l,[["render",p],["__file","深入浅出webpack.html.vue"]]),u=JSON.parse(`{"path":"/reads/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BAwebpack.html","title":"深入浅出webpack","lang":"en-US","frontmatter":{"title":"深入浅出webpack","date":"2022-01-02T00:00:00.000Z","cover":"/reads/深入浅出webpack.jpg"},"headers":[{"level":2,"title":"模块化","slug":"模块化","link":"#模块化","children":[{"level":3,"title":"CommonJS","slug":"commonjs","link":"#commonjs","children":[]},{"level":3,"title":"AMD","slug":"amd","link":"#amd","children":[]},{"level":3,"title":"ES Module","slug":"es-module","link":"#es-module","children":[]}]},{"level":2,"title":"“构建”","slug":"构建","link":"#构建","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"loader","slug":"loader","link":"#loader","children":[]},{"level":3,"title":"plugin","slug":"plugin","link":"#plugin","children":[]},{"level":3,"title":"devServer","slug":"devserver","link":"#devserver","children":[]},{"level":3,"title":"核心概念","slug":"核心概念","link":"#核心概念","children":[]}]},{"level":2,"title":"entry","slug":"entry","link":"#entry","children":[{"level":3,"title":"类型","slug":"类型","link":"#类型","children":[]},{"level":3,"title":"chunk","slug":"chunk","link":"#chunk","children":[]},{"level":3,"title":"动态entry","slug":"动态entry","link":"#动态entry","children":[]}]}],"git":{"updatedTime":1714285820000,"contributors":[{"name":"LeslieXin92","email":"leslieXin92@gmail.com","commits":1}]},"filePathRelative":"reads/深入浅出webpack.md","excerpt":"\\n<h1>入门</h1>\\n<h2>模块化</h2>\\n<h3>CommonJS</h3>\\n<h5>写法：</h5>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// export</span>\\nmodules<span class=\\"token punctuation\\">.</span>export <span class=\\"token operator\\">=</span> moduleA\\n\\n<span class=\\"token comment\\">// import</span>\\n<span class=\\"token keyword\\">const</span> moduleA <span class=\\"token operator\\">=</span> <span class=\\"token function\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'./moduleA'</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>"}`);export{d as comp,u as data};
